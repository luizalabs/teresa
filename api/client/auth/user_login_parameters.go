package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/luizalabs/paas/api/models"
)

// NewUserLoginParams creates a new UserLoginParams object
// with the default values initialized.
func NewUserLoginParams() *UserLoginParams {
	var ()
	return &UserLoginParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUserLoginParamsWithTimeout creates a new UserLoginParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUserLoginParamsWithTimeout(timeout time.Duration) *UserLoginParams {
	var ()
	return &UserLoginParams{

		timeout: timeout,
	}
}

/*UserLoginParams contains all the parameters to send to the API endpoint
for the user login operation typically these are written to a http.Request
*/
type UserLoginParams struct {

	/*Body*/
	Body *models.Login

	timeout time.Duration
}

// WithBody adds the body to the user login params
func (o *UserLoginParams) WithBody(Body *models.Login) *UserLoginParams {
	o.Body = Body
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *UserLoginParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.Body == nil {
		o.Body = new(models.Login)
	}

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
