package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/luizalabs/teresa-api/models"
)

// GetAppLogsReader is a Reader for the GetAppLogs structure.
type GetAppLogsReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the recieved o.
func (o *GetAppLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAppLogsOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetAppLogsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetAppLogsOK creates a GetAppLogsOK with default headers values
func NewGetAppLogsOK(writer io.Writer) *GetAppLogsOK {
	return &GetAppLogsOK{
		Payload: writer,
	}
}

/*GetAppLogsOK handles this case with default header values.

App logs
*/
type GetAppLogsOK struct {
	Payload io.Writer
}

func (o *GetAppLogsOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app_name}/logs][%d] getAppLogsOK  %+v", 200, o.Payload)
}

func (o *GetAppLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppLogsDefault creates a GetAppLogsDefault with default headers values
func NewGetAppLogsDefault(code int) *GetAppLogsDefault {
	return &GetAppLogsDefault{
		_statusCode: code,
	}
}

/*GetAppLogsDefault handles this case with default header values.

Unexpected error
*/
type GetAppLogsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get app logs default response
func (o *GetAppLogsDefault) Code() int {
	return o._statusCode
}

func (o *GetAppLogsDefault) Error() string {
	return fmt.Sprintf("[GET /apps/{app_name}/logs][%d] getAppLogs default  %+v", o._statusCode, o.Payload)
}

func (o *GetAppLogsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
