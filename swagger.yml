---
swagger: "2.0"
info:
  description: The Teresa PaaS API
  title: Teresa API
  version: 0.3.2
host: localhost:8080
consumes:
- application/json
produces:
- application/json
schemes:
- http
basePath: /v1
securityDefinitions:
  api_key:
    type: apiKey
    name: token
    in: query
  token_header:
    type: apiKey
    name: Authorization
    in: header
paths:
  /teams:
    get:
      summary: Get teams
      description: Get a list of teams
      tags:
        - teams
      operationId: getTeams
      security:
        - api_key: []
        - token_header: []
      responses:
        200:
          description: list of teams
          schema:
            type: array
            items:
              $ref: "#/definitions/Team"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /teams/{team_id}:
    get:
      summary: Get team details
      description: Get the details of a specific team
      tags:
        - teams
      operationId: getTeamDetail
      security:
        - api_key: []
        - token_header: []
      parameters:
        - $ref: "#/parameters/teamId"
      responses:
        200:
          description: Team details
          schema:
            $ref: "#/definitions/Team"
        401:
          description: User not authorized
          schema:
            $ref: "#/definitions/Unauthorized"
        403:
          description: |
            User does not have the credentials to access this resource
          schema:
            $ref: "#/definitions/Unauthorized"
        default:
          description: Error
          schema:
            $ref: "#/definitions/GenericError"
    put:
      summary: Update team
      description: Update team details
      tags:
        - teams
      operationId: updateTeam
      security:
        - api_key: []
        - token_header: []
      parameters:
        - $ref: "#/parameters/teamId"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/Team"
      responses:
        200:
          description: Team details
          schema:
            $ref: "#/definitions/Team"
        default:
          description: Error
          schema:
            $ref: "#/definitions/GenericError"
    delete:
      summary: Delete team
      description: Delete team
      tags:
        - teams
      operationId: deleteTeam
      security:
        - api_key: []
        - token_header: []
      parameters:
        - $ref: "#/parameters/teamId"
      responses:
        204:
          description: No content
        default:
          description: Error
          schema:
            $ref: "#/definitions/GenericError"
  /teams/{team_name}/users:
    post:
      summary: Add user to team
      tags:
        - teams
      operationId: addUserToTeam
      security:
        - api_key: []
        - token_header: []
      parameters:
        - $ref: "#/parameters/teamName"
        - name: user
          in: body
          schema:
            type: object
            required:
            - email
            properties:
              email:
                type: string
                format: email
                minLength: 1
      responses:
        200:
          description: Team details
          schema:
            $ref: "#/definitions/Team"
        default:
          description: Error
          schema:
            $ref: "#/definitions/GenericError"

  /apps:
    post:
      summary: Create an app
      description: Create an app
      tags:
        - apps
      operationId: createApp
      security:
        - api_key: []
        - token_header: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/AppIn"
      responses:
        201:
          description: Newly created app
          schema:
            $ref: "#/definitions/App"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    get:
      summary: Get a list of apps
      description: Get a list of apps
      tags:
        - apps
      operationId: getApps
      security:
        - api_key: []
        - token_header: []
      responses:
        200:
          description: list of apps
          schema:
            type: array
            items:
              $ref: "#/definitions/App"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /apps/{app_name}:
    get:
      summary: Get app details
      description: Get app details
      tags:
        - apps
      operationId: getAppDetails
      security:
        - api_key: []
        - token_header: []
      parameters:
        - $ref: "#/parameters/appName"
      responses:
        200:
          description: App details
          schema:
            $ref: "#/definitions/App"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    patch:
      summary: Partial update app
      description: Update some app properties, for now, only accept envvars
      tags:
        - apps
      operationId: partialUpdateApp
      security:
        - api_key: []
        - token_header: []
      # consumes:
      #   - application/json-patch+json
      parameters:
        - $ref: "#/parameters/appName"
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/PatchAppRequest"
      responses:
        200:
          description: App
          schema:
            $ref: "#/definitions/App"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    put:
      summary: Update an app
      description: Update app properties, such as number of replicas and other things.
      tags:
        - apps
      operationId: updateApp
      security:
        - api_key: []
        - token_header: []
      parameters:
        - $ref: "#/parameters/appName"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/AppIn"
      responses:
        200:
          description: Updated version of the app
          schema:
            $ref: "#/definitions/App"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /apps/{app_name}/scale:
    put:
      summary: Update app scale
      description: Update app scale size (replicas)
      tags:
        - apps
      operationId: updateAppScale
      security:
        - api_key: []
        - token_header: []
      parameters:
        - $ref: "#/parameters/appName"
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              scale:
                type: integer
                description: number of PODs running the app
                default: 1
                minimum: 1
      responses:
        200:
          description: Updated version of the app
          schema:
            $ref: "#/definitions/App"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /apps/{app_name}/autoScale:
    put:
      summary: Update app auto scale
      description: Update app auto scale
      tags:
        - apps
      operationId: updateAppAutoScale
      security:
        - api_key: []
        - token_header: []
      parameters:
        - $ref: "#/parameters/appName"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/AutoScale"
      responses:
        200:
          description: Updated version of the app
          schema:
            $ref: "#/definitions/App"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /apps/{app_name}/logs:
    get:
      summary: Get app logs
      description: Get app logs
      tags:
        - apps
      operationId: getAppLogs
      security:
        - api_key: []
        - token_header: []
      produces:
        - application/octet-stream
      parameters:
        - $ref: "#/parameters/appName"
        - $ref: "#/parameters/follow"
        - $ref: "#/parameters/lines"
      responses:
        200:
          description: App logs
          schema:
            type: string
            format: binary
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /teams/{team_id}/apps/{app_id}/deployments:
    get:
      summary: Get app deployments
      description: Get deployments an app may have
      tags:
        - deployments
      operationId: getDeployments
      security:
        - api_key: []
        - token_header: []
      parameters:
        - $ref: "#/parameters/teamId"
        - $ref: "#/parameters/appId"
        - $ref: "#/parameters/since"
        - $ref: "#/parameters/limit"
      responses:
        200:
          description: Get app deployments
          schema:
            allOf:
              - $ref: "#/definitions/Pagination"
              - properties:
                  items:
                    type: array
                    items:
                      $ref: "#/definitions/Deployment"
        401:
          description: User not authorized
          schema:
            $ref: "#/definitions/Unauthorized"
        403:
          description: |
            User does not have the credentials to access this resource
          schema:
            $ref: "#/definitions/Unauthorized"
        default:
          description: Error
          schema:
            $ref: "#/definitions/GenericError"
  /apps/{app_name}/deployments:
    post:
      summary: Create a new deploy
      description: Create a deploy for an app
      tags:
        - deployments
      operationId: createDeployment
      security:
        - api_key: []
        - token_header: []
      consumes:
        - multipart/form-data
      produces:
        - application/octet-stream
      parameters:
        - $ref: "#/parameters/appName"
        - name: description
          in: formData
          required: false
          type: string
        - name: appTarball
          in: formData
          required: true
          type: file
      responses:
        200:
          description: App
          schema:
            type: string
            format: binary
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users:
    get:
      summary: Get users
      description: Find and filter users
      tags:
        - users
      operationId: getUsers
      security:
        - api_key: []
        - token_header: []
      parameters:
        - $ref: "#/parameters/since"
        - $ref: "#/parameters/limit"
      responses:
        200:
          description: Get users
          schema:
            allOf:
              - $ref: "#/definitions/Pagination"
              - properties:
                  items:
                    type: array
                    items:
                      $ref: "#/definitions/User"
        400:
          description: User sent a bad request
          schema:
            $ref: "#/definitions/BadRequest"
        401:
          description: User not authorized
          schema:
            $ref: "#/definitions/Unauthorized"
        403:
          description: |
            User does not have the credentials to access this resource
          schema:
            $ref: "#/definitions/Unauthorized"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/NotFound"
        default:
          description: Error
          schema:
            $ref: "#/definitions/GenericError"
    post:
      summary: Create user
      description: Create a user.
      tags:
        - users
      operationId: createUser
      security:
        - api_key: []
        - token_header: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: Newly created user
          schema:
            $ref: "#/definitions/User"
        400:
          description: User sent a bad request
          schema:
            $ref: "#/definitions/BadRequest"
        401:
          description: User not authorized
          schema:
            $ref: "#/definitions/Unauthorized"
        403:
          description: |
            User does not have the credentials to access this resource
          schema:
            $ref: "#/definitions/Unauthorized"
        default:
          description: Error
          schema:
            $ref: "#/definitions/GenericError"
  /users/{user_id}:
    get:
      summary: Get user details
      description: Get user details
      tags:
        - users
      operationId: getUserDetails
      security:
        - api_key: []
        - token_header: []
      parameters:
        - $ref: "#/parameters/userId"
        - $ref: "#/parameters/since"
        - $ref: "#/parameters/limit"
      responses:
        200:
          description: User details
          schema:
            $ref: "#/definitions/User"
        401:
          description: User not authorized
          schema:
            $ref: "#/definitions/Unauthorized"
        403:
          description: |
            User does not have the credentials to access this resource
          schema:
            $ref: "#/definitions/Unauthorized"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/NotFound"
        default:
          description: Error
          schema:
            $ref: "#/definitions/GenericError"
    put:
      summary: Update user
      description: Update user details
      tags:
        - users
      operationId: updateUser
      security:
        - api_key: []
        - token_header: []
      parameters:
        - $ref: "#/parameters/userId"
      responses:
        200:
          description: User details
          schema:
            $ref: "#/definitions/User"
        401:
          description: User not authorized
          schema:
            $ref: "#/definitions/Unauthorized"
        403:
          description: |
            User does not have the credentials to access this resource
          schema:
            $ref: "#/definitions/Unauthorized"
        404:
          description: Resource not found
          schema:
            $ref: "#/definitions/NotFound"
        default:
          description: Error
          schema:
            $ref: "#/definitions/GenericError"
  /swagger:
    x-swagger-pipe: swagger_raw
parameters:
  appId:
    name: app_id
    description: App ID
    in: path
    type: integer
    format: int64
    required: true
  teamId:
    name: team_id
    description: Team ID
    in: path
    type: integer
    format: int64
    required: true
  appName:
    name: app_name
    in: path
    description: App name
    type: string
    required: true
    pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
  teamName:
    name: team_name
    in: path
    description: Team name
    type: string
    required: true
    pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
  userId:
    name: user_id
    description: User ID
    in: path
    type: integer
    format: int64
    required: true
  since:
    name: since
    description: Offset
    in: query
    type: integer
    format: int64
    default: 0
  limit:
    name: limit
    description: Limit
    in: query
    type: integer
    format: int64
    default: 20
  follow:
    name: follow
    in: query
    description: Follow logs
    type: boolean
    default: false
  lines:
    name: lines
    in: query
    description: Logs lines
    type: integer
    format: int64
    default: 10
definitions:
  Login:
    required:
      - email
      - password
    properties:
      email:
        type: string
        format: email
        minLength: 1
      password:
        type: string
        format: password
        minLength: 1
  Pagination:
    properties:
      pagination:
        properties:
          self:
            type: string
          nextUrl:
            type: string
          previousUrl:
            type: string
          size:
            type: integer
          length:
            type: integer
  Team:
    required:
      - name
    properties:
      id:
        type: integer
      name:
        type: string
        pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
        minLength: 3
      email:
        type: string
        format: email
      url:
        type: string
      iAmMember:
        type: boolean
      apps:
        type: array
        items:
          $ref: "#/definitions/App"
      members:
        type: array
        items:
          $ref: "#/definitions/User"
  User:
    type: object
    required:
      - name
      - email
      - password
      - isAdmin
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        minLength: 5
      email:
        type: string
        minLength: 8
      isAdmin:
        type: boolean
      password:
        type: string
        minLength: 8
      teams:
        type: array
        items:
          $ref: "#/definitions/Team"
  Status:
    type: object
    required:
      - cpu
      - pods
    properties:
      cpu:
        type: integer
        format: int32
      pods:
        type: integer
        format: int32
  AppIn:
    type: object
    description: Application data
    required:
      - name
      - team
    properties:
      name:
        type: string
        description: the name of the app
        pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
      team:
        type: string
        description: |
          the name of the team that this app belongs.
          if the user is in only one team, this is parameter is not required
        pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
      healthCheck:
        type: object
        description: app health check
        properties:
          liveness:
            description: |
              check if the app is responding.
              containers of the app will be restarted if this check fails
            $ref: "#/definitions/HealthCheckProbe"
          readiness:
            description: |
              check if the app is fully working.
              containers of the app will be removed from service endpoints if the check fails
            $ref: "#/definitions/HealthCheckProbe"
      processType:
        type: string
        description: app process type
        pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
        default: web
      scale:
        type: integer
        description: number of PODs running the app
        default: 1
        minimum: 1
      autoScale:
        $ref: "#/definitions/AutoScale"
      rollingUpdate:
        type: object
        description: params to use when starting a new deployment
        required:
          - maxSurge
          - maxUnavailable
        properties:
          maxSurge:
            type: string
            description: |
              specifies the maximum number of PODs that can be created above the desired number of PODs during deployment.
              this can be percentage (of the scale) or a specific number os PODs
            minLength: 1
            default: '1'
            pattern: '^\d+%?$'
          maxUnavailable:
            type: string
            description: |
              specifies the maximun number of unavailable PODs during deployment percentage (of the desired scale).
              this can be percentage (of the scale) or a specific number os PODs
            minLength: 1
            default: 70%
            pattern: '^\d+%?$'
      limits:
        type: object
        description: specifies the limit ranges of the APP
        required:
          - default
          - defaultRequest
        properties:
          max:
            type: array
            items:
              $ref: "#/definitions/LimitRangeQuantity"
          min:
            type: array
            items:
              $ref: "#/definitions/LimitRangeQuantity"
          default:
            type: array
            items:
              $ref: "#/definitions/LimitRangeQuantity"
          defaultRequest:
            type: array
            items:
              $ref: "#/definitions/LimitRangeQuantity"
          limitRequestRatio:
            type: array
            items:
              $ref: "#/definitions/LimitRangeQuantity"
  AutoScale:
    type: object
    description: horizontal auto scale params
    properties:
      min:
        type: integer
        description: minimum number of PODs running the app
        default: 1
        minimum: 1
      max:
        type: integer
        description: maximum number of PODs running the app
        default: 10
        minimum: 1
      cpuTargetUtilization:
        type: integer
        description: target average CPU utilization (represented as a percentage of requested CPU) over all the pods
        default: 80
        minimum: 0
        maximum: 100
  HealthCheckProbe:
    type: object
    properties:
      path:
        type: string
        description: path of the health check
        example: /health
      initialDelaySeconds:
        type: integer
        description: length of time before health checking is activated
        minimum: 1
        maximum: 60
        default: 3
      periodSeconds:
        type: integer
        description: how often to perform the health check
        default: 5
        minimum: 1
        maximum: 300
      timeoutSeconds:
        type: integer
        description: length of time before health checking times out
        default: 1
        minimum: 1
        maximum: 15
      successThreshold:
        type: integer
        description: minimum consecutive successes for the health check to be considered successful after having failed
        default: 1
        minimum: 1
        maximum: 10
      failureThreshold:
        type: integer
        description: minimum consecutive failures for the health check to be considered failed after having succeeded.
        default: 3
        minimum: 1
        maximum: 10
  LimitRangeQuantity:
    type: object
    required:
      - resource
      - quantity
    properties:
      resource:
        type: string
        description: resouce type
        enum:
          - cpu
          - memory
          - storage
      quantity:
        type: string
        description: |
          quantity of the resource.
          example:
          can be:
            binarySI: Ki | Mi | Gi | Ti | Pi | Ei
            (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
            decimalSI: m | "" | k | M | G | T | P | E
          Note that 1024 = 1Ki but 1000 = 1k
        example: 512Mi
        pattern: '^\d+(([KMGTPE]{1}i)|([mkMGTPE]))?$'
  App:
    allOf:
    - $ref: "#/definitions/AppIn"
    - type: object
      required:
      - creator
      properties:
        creator:
          $ref: "#/definitions/User"
        addressList:
          type: array
          description: list of the external addresses of the app
          items:
            type: string
        deploymentList:
          type: array
          items:
            $ref: "#/definitions/Deployment"
        envVars:
          type: array
          items:
            $ref: "#/definitions/EnvVar"
        status:
          $ref: "#/definitions/Status"
  PatchAppRequest: # for now, only this two https://tools.ietf.org/html/rfc6902 || http://jsonpatch.com/
    type: object
    description: used to create a patch update to an app
    required:
      - op
      - path
      - value
    properties:
      op:
        type: string
        default: add
        enum:
          - add
          - remove
      path:
        type: string
        default: /envvars
      value:
        type: array
        items:
          $ref: "#/definitions/PatchAppEnvVar"
  PatchAppEnvVar:
    type: object
    description: app environment var
    required:
      - key
    properties:
      key:
        type: string
      value:
        type: string
  EnvVar:
    type: object
    description: app environment var
    required:
      - key
      - value
    properties:
      key:
        type: string
      value:
        type: string
  Deployment:
    required:
      - uuid
      - description
    properties:
      uuid:
        type: string
      description:
        type: string
      origin:
        type: string
        description: where the deploy process was started
        default: cli_app_deploy
        enum:
          - cli_app_deploy
          - git
          - ci
      # # FIXME: https://github.com/go-swagger/go-swagger/issues/537
      # author:
      #   $ref: "#/definitions/User"
      when:
        type: string
        format: date-time
      error:
        type: string
        description: description of the error, if any
  LoginToken:
    type: object
    properties:
      token:
        type: string
  NotFound:
    type: object
    properties:
      code:
        type: integer
        format: int64
        default: 404
      message:
        type: string
        default: Not Found
  BadRequest:
    type: object
    properties:
      code:
        type: integer
        format: int64
        default: 400
      message:
        type: string
        default: Bad Request
  Unauthorized:
    type: object
    properties:
      code:
        type: integer
        format: int64
        default: 401
      message:
        type: string
        default: Unauthorized
  Forbidden:
    type: object
    properties:
      code:
        type: integer
        format: int64
        default: 403
      message:
        type: string
        default: Forbidden
  GenericError:
    type: object
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  Error:
    type: object
    required:
    - code
    - message
    properties:
      code:
        description: http status of the error
        type: integer
        format: int32
      message:
        type: string
      reason:
        type: string
        description: |
          reason of the error if any.
          always represented as an enum in pascal case
        enum:
        - BadRequest
        - Unauthorized
        - Forbidden
        - NotFound
        - Conflict
        - InternalServerError
